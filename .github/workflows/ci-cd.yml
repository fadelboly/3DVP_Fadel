name: CI/CD Pipeline

on:
  push:
    branches:
      - main  

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: docker build -t my-app:latest .

  push:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: bolyfadel
        password: Fadel123456
    - name: Push Docker image
      run: docker tag my-app:latest ${{ secrets.DOCKER_USERNAME }}/my-app:latest && docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: push

    steps:
    - name: Deploy to server
      env:
        DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/my-app:latest
        DEPLOYMENT_SERVER: ${{ secrets.DEPLOYMENT_SERVER }}
        DEPLOYMENT_USER: ${{ secrets.DEPLOYMENT_USER }}
        DEPLOYMENT_KEY: ${{ secrets.DEPLOYMENT_KEY }}
      run: |
        ssh -i $DEPLOYMENT_KEY $DEPLOYMENT_USER@$DEPLOYMENT_SERVER << 'EOF'
          docker pull $DOCKER_IMAGE
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app -p 80:80 $DOCKER_IMAGE
        EOF
